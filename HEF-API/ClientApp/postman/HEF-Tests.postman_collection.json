{
	"info": {
		"_postman_id": "084b9df5-dd65-4bd9-bf4d-24d0a837cb1a",
		"name": "HEF-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post",
			"item": [
				{
					"name": "PostArea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"areaID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"areaID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"Name\": \"< name >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/areas",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"areas"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"userID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"userID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"< name >\", \r\n    \"Email\": \"< email >\",\r\n    \"Password\": \"< password >\",\r\n    \"Role\": 1, \r\n    \"Status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostPlant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"plantID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"plantID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"< name >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/plants",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plants"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostStation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"stationsID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"stationsID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PlantId\": {{plantID}},\r\n    \"AreaId\": {{areaID}},\r\n    \"Name\": \"< name >\",\r\n    \"Address\": \"< address >\",\r\n    \"Coordinates\": \"< coordinates >\",\r\n    \"LocationPrecise\": \"< locationprecise >\",\r\n    \"Description\": \"< description >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/stations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"jobID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"jobID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stationId\": {{stationsID}},\r\n    \"name\": \"< name >\",\r\n    \"Description\": \"< description >\",\r\n    \"Status\": 1,\r\n    \"completeBy\": \"2020-01-01\",\r\n    \"recurring\": 1,\r\n    \"Duration\": \"00:00\",\r\n    \"EmergencyJob\": false,\r\n    \"hasComments\": true,\r\n    \"LastCheck\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/jobs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostComment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"commentsID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"commentsID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Text is correct\"] = jsonData.text === \"< text >\";\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserID\": {{userID}},\r\n    \"JobID\": {{jobID}},\r\n    \"Text\": \"< text >\",\r\n    \"Seen\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/comments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostEquipment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"equipmentID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"equipmentID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Name is correct\"] = jsonData.name === \"< name >\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"StationId\": {{stationsID}},\r\n    \"Name\": \"< name >\",\r\n    \"Model\": \"2018-01-01\",\r\n    \"Manufacturer\": \"< manufacturer >\",\r\n    \"Operation\": \"< operation >\",\r\n    \"LastCheck\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/equipments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostSubJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"subjobID\");\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"subjobID\", jsonData.id);\r",
									"\r",
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"tests[\"Task is correct\"] = jsonData.subJobTask === 1;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"JobId\":{{jobID}}, \r\n    \"EquipmentId\": {{equipmentID}}, \r\n    \"Description\": \"< description >\", \r\n    \"Status\": 1, \r\n    \"Unit\": 1, \r\n    \"Value\": 10.0,\r\n    \"SubJobTask\": 1,\r\n    \"CompletedOn\": \"2021-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/subjobs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"subjobs"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get",
			"item": [
				{
					"name": "GetArea",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"areaID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.name === \"< name >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorize",
								"value": "Bearer{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/areas",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"areas"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"userID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.name === \"< name >\";\r",
									"    jsonData.email === \"< email >\";\r",
									"    jsonData.password === \"< password >\";\r",
									"    jsonData.role === 1;\r",
									"    jsonData.status === 1;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetPlant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"plantID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.name === \"< name >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/plants",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plants"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetStation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"stationsID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.plantId === pm.collectionVariables.get(\"plantID\");\r",
									"    jsonData.areaId === pm.collectionVariables.get(\"areaID\");\r",
									"    jsonData.name === \"< name >\";\r",
									"    jsonData.address === \"< address >\";\r",
									"    jsonData.coordinates === \"< coordinates >\";\r",
									"    jsonData.locationPrecise === \"< locationprecise >\";\r",
									"    jsonData.description === \"< description >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/stations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stations"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"jobID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.stationId === pm.collectionVariables.get(\"stationsID\");\r",
									"    jsonData.name === \"< name >\";\r",
									"    jsonData.description === \"< description >\";\r",
									"    jsonData.status === 1;\r",
									"    jsonData.completeBy === \"2020-01-01\";\r",
									"    jsonData.recurring === 1;\r",
									"    jsonData.emergencyJob === false;\r",
									"    jsonData.hasComments === true;\r",
									"    jsonData.lastCheck === \"2020-01-01\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/jobs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetComment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"commentsID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.userId === pm.collectionVariables.get(\"userID\");\r",
									"    jsonData.jobId === pm.collectionVariables.get(\"jobID\");\r",
									"    jsonData.text === \"< text >\";\r",
									"    jsonData.seen === false;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/comments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetEquipment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"equipmentID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.stationsId === pm.collectionVariables.get(\"stationsID\");\r",
									"    jsonData.name === \"< name >\";\r",
									"    jsonData.model === \"2018-01-01\";\r",
									"    jsonData.manufacturer === \"< manufacturer >\";\r",
									"    jsonData.operation === \"< operation >\";\r",
									"    jsonData.lastCheck === \"2018-01-01\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/equipments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"equipments"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "GetSubJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var id = pm.collectionVariables.get(\"subjobID\");\r",
									"var jsonData = pm.response.json().find(x => x.id == id);\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === id;\r",
									"    jsonData.jobId === pm.collectionVariables.get(\"jobID\");\r",
									"    jsonData.equipmentId === pm.collectionVariables.get(\"equipmentID\");\r",
									"    jsonData.description === \"< description >\";\r",
									"    jsonData.status === 1;\r",
									"    jsonData.unit === 1;\r",
									"    jsonData.value === 10.0;\r",
									"    jsonData.subJobTask === 1;\r",
									"    jsonData.completedOn === \"2021-01-01\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/subjobs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"subjobs"
							]
						}
					},
					"response": [
						{
							"name": "Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/comments",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1,\r\n        \"jobId\": 1,\r\n        \"text\": \"Þetta eru athugasemdir vegna hitamælis\",\r\n        \"seen\": true\r\n    }\r\n]"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Put",
			"item": [
				{
					"name": "PutArea",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"areaID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"id\": {{areaID}},\r\n    \"name\": \"< updated name >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/areas/{{areaID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"areas",
								"{{areaID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var id = pm.collectionVariables.get(\"userID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{userID}},\r\n    \"Name\": \"< updated name >\", \r\n    \"Email\": \"< updated email >\",\r\n    \"Password\": \"< updated password >\",\r\n    \"Role\": 2, \r\n    \"Status\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users/{{userID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutPlant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var id = pm.collectionVariables.get(\"plantID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{plantID}},\r\n\t\"Name\": \"< updated name >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/plants/{{plantID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plants",
								"{{plantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutStation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"stationsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{stationsID}},\r\n    \"PlantId\": {{plantID}},\r\n    \"AreaId\": {{areaID}},\r\n    \"Name\": \"< updated name >\",\r\n    \"Address\": \"< updated address >\",\r\n    \"Coordinates\": \"< updated coordinates >\",\r\n    \"LocationPrecise\": \"< updated locationprecise >\",\r\n    \"Description\": \"< updated description >\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/stations/{{stationsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stations",
								"{{stationsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"jobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{jobID}},\r\n    \"stationId\": {{stationsID}},\r\n    \"name\": \"< updated name >\",\r\n    \"Description\": \"< updated description >\",\r\n    \"Status\": 2,\r\n    \"completeBy\": \"2020-01-02\",\r\n    \"recurring\": 2,\r\n    \"Duration\": \"00:01\",\r\n    \"EmergencyJob\": true,\r\n    \"hasComments\": false,\r\n    \"LastCheck\": \"2020-01-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/jobs/{{jobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutComment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"commentsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"Id\": {{commentsID}},\r\n    \"UserID\": {{userID}},\r\n    \"JobID\": {{jobID}},\r\n    \"Text\": \"< updated text >\",\r\n    \"Seen\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/comments/{{commentsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"comments",
								"{{commentsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutEquipment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"equipmentID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{equipmentID}},\r\n    \"StationId\": {{stationsID}},\r\n    \"Name\": \"< updated name >\",\r\n    \"Model\": \"2018-01-02\",\r\n    \"Manufacturer\": \"< updated manufacturer >\",\r\n    \"Operation\": \"< updated operation >\",\r\n    \"LastCheck\": \"2020-01-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/equipments/{{equipmentID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"equipments",
								"{{equipmentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutSubJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var id = pm.collectionVariables.get(\"subjobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{subjobID}},\r\n    \"JobId\":{{jobID}}, \r\n    \"EquipmentId\": {{equipmentID}}, \r\n    \"Description\": \"< updated description >\", \r\n    \"Status\": 2, \r\n    \"Unit\": 2, \r\n    \"Value\": 20.0,\r\n    \"SubJobTask\": 2,\r\n    \"CompletedOn\": \"2021-01-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/subjobs/{{subjobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"subjobs",
								"{{subjobID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "GetById",
			"item": [
				{
					"name": "GetAreaById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"areaID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"areaID\");\r",
									"    jsonData.name ===  \"< updated name >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/areas/{{areaID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"areas",
								"{{areaID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"userID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"userID\");\r",
									"    jsonData.name === \"< updated name >\";\r",
									"    jsonData.email === \"< updated email >\";\r",
									"    jsonData.password === \"< updated password >\";\r",
									"    jsonData.role === 2;\r",
									"    jsonData.status === 2;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/{{userID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPlantById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"plantID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"plantID\");\r",
									"    jsonData.name === \"< updated name >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/plants/{{plantID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plants",
								"{{plantID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetStationById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"stationsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"userID\");\r",
									"    jsonData.plantId === pm.collectionVariables.get(\"plantID\");\r",
									"    jsonData.areaId === pm.collectionVariables.get(\"areaID\");\r",
									"    jsonData.name === \"< updated name >\";\r",
									"    jsonData.address === \"< updated address >\";\r",
									"    jsonData.coordinates === \"< updated coordinates >\";\r",
									"    jsonData.locationPrecise === \"< updated locationprecise >\";\r",
									"    jsonData.description === \"< updated description >\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/stations/{{stationsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stations",
								"{{stationsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetJobById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"jobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"jobID\");\r",
									"    jsonData.stationId === pm.collectionVariables.get(\"stationsID\");\r",
									"    jsonData.name === \"< updated name >\";\r",
									"    jsonData.description === \"< updated description >\";\r",
									"    jsonData.status === 2;\r",
									"    jsonData.completeBy === \"2020-01-02\";\r",
									"    jsonData.recurring === 2;\r",
									"    jsonData.emergencyJob === true;\r",
									"    jsonData.hasComments === false;\r",
									"    jsonData.lastCheck === \"2020-01-02\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/jobs/{{jobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCommentById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"commentsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"commentsID\");\r",
									"    jsonData.userId === pm.collectionVariables.get(\"userID\");\r",
									"    jsonData.jobId === pm.collectionVariables.get(\"jobID\");\r",
									"    jsonData.text === \"< updated text >\";\r",
									"    jsonData.seen === true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/comments/{{commentsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"comments",
								"{{commentsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetEquipmentById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"equipmentID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"equipmentID\");\r",
									"    jsonData.stationsId === pm.collectionVariables.get(\"stationsID\");\r",
									"    jsonData.name === \"< updated name >\";\r",
									"    jsonData.model === \"2018-01-02\";\r",
									"    jsonData.manufacturer === \"< updated manufacturer >\";\r",
									"    jsonData.operation === \"< updated operation >\";\r",
									"    jsonData.lastCheck === \"2018-01-02\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/equipments/{{equipmentID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"equipments",
								"{{equipmentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSubJobById",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var id = pm.collectionVariables.get(\"subjobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Object matches\", function () {\r",
									"    jsonData.id === pm.collectionVariables.get(\"subjobID\");\r",
									"    jsonData.jobId === pm.collectionVariables.get(\"jobID\");\r",
									"    jsonData.equipmentId === pm.collectionVariables.get(\"equipmentID\");\r",
									"    jsonData.description === \"< updated description >\";\r",
									"    jsonData.status === 2;\r",
									"    jsonData.unit === 2;\r",
									"    jsonData.value === 20.0;\r",
									"    jsonData.subJobTask === 2;\r",
									"    jsonData.completedOn === \"2021-01-02\";\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/subjobs/{{subjobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"subjobs",
								"{{subjobID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "DeleteComment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"commentsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"commentsID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/comments/{{commentsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"comments",
								"{{commentsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteSubJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"subjobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;\r",
									"\r",
									"pm.collectionVariables.unset(\"subjobID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/subjobs/{{subjobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"subjobs",
								"{{subjobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteJob",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"jobID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"jobID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/jobs/{{jobID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteEquipment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"equipmentID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"equipmentID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/equipments/{{equipmentID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"equipments",
								"{{equipmentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteStation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"stationsID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"stationsID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/stations/{{stationsID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"stations",
								"{{stationsID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteArea",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"areaID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"areaID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/areas/{{areaID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"areas",
								"{{areaID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"userID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"userID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/{{userID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePlant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"plantID\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"plantID\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/plants/{{plantID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plants",
								"{{plantID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://3730b626-4fcc-41bd-ad5c-e9ea687f1fef.mock.pstmn.io",
			"disabled": true
		},
		{
			"key": "url",
			"value": "https://localhost:5001"
		},
		{
			"key": "Id",
			"value": ""
		},
		{
			"key": "model",
			"value": ""
		},
		{
			"key": "entity",
			"value": ""
		}
	]
}